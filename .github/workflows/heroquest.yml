name: Publish Docker image

# on:
#   release:
#     types: [published]

# jobs:
#   push_to_registry:
#     name: Push Docker image to Docker Hub
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v2

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_TOKEN }}

#       - name: Build Docker image
#         run: docker build -t ${{ github.repository }}:${{ github.sha }} .

#       - name: Set environment variables
#         run: |
#           echo "IMAGE_NAME=${{ github.repository }}" >> $GITHUB_ENV
#           echo "IMAGE_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

#       - name: Tag Docker image with release/tag and latest
#         run: |
#           docker tag $IMAGE_NAME:$GITHUB_SHA $IMAGE_NAME:$IMAGE_TAG
#           docker tag $IMAGE_NAME:$GITHUB_SHA $IMAGE_NAME:latest

#       - name: Push Docker image
#         run: |
#           docker push $IMAGE_NAME:$IMAGE_TAG
#           docker push $IMAGE_NAME:latest

on:
  push:
    branches:
      - 'feature/*'
jobs:
  deploy_on_azure:
    name: Deploy new Image
    runs-on: ubuntu-latest
    # needs: push_to_registry
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          cat ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan ${{ secrets.AZURE_SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Connect to Remote Server and Run Command
        run: |
          ssh -i ~/.ssh/id_ed25519 ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_SERVER_HOST }} "docker compose -f /home/vega/project/heroquest_assistant/docker-compose.yml pull"
